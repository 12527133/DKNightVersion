//
//  UILabel+Night.m
//  UILabel+Night
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "UILabel+Night.h"
#import "DKNightVersionManager.h"
#import <objc/runtime.h>

@interface UILabel ()

@property (nonatomic, strong) NSMutableDictionary<NSString *, DKColorPicker> *pickers;

@end

@implementation UILabel (Night)


- (DKColorPicker)dk_textColorPicker {
    return objc_getAssociatedObject(self, @selector(dk_textColorPicker));
}

- (void)dk_setTextColorPicker:(DKColorPicker)picker {
    objc_setAssociatedObject(self, @selector(dk_textColorPicker), picker, OBJC_ASSOCIATION_COPY_NONATOMIC);
    self.textColor = picker(self.dk_manager.themeVersion);
    [self.pickers setValue:[picker copy] forKey:@"setTextColor:"];
}

- (DKColorPicker)dk_shadowColorPicker {
    return objc_getAssociatedObject(self, @selector(dk_shadowColorPicker));
}

- (void)dk_setShadowColorPicker:(DKColorPicker)picker {
    objc_setAssociatedObject(self, @selector(dk_shadowColorPicker), picker, OBJC_ASSOCIATION_COPY_NONATOMIC);
    self.shadowColor = picker(self.dk_manager.themeVersion);
    [self.pickers setValue:[picker copy] forKey:@"setShadowColor:"];
}

- (DKColorPicker)dk_highlightedTextColorPicker {
    return objc_getAssociatedObject(self, @selector(dk_highlightedTextColorPicker));
}

- (void)dk_setHighlightedTextColorPicker:(DKColorPicker)picker {
    objc_setAssociatedObject(self, @selector(dk_highlightedTextColorPicker), picker, OBJC_ASSOCIATION_COPY_NONATOMIC);
    self.highlightedTextColor = picker(self.dk_manager.themeVersion);
    [self.pickers setValue:[picker copy] forKey:@"setHighlightedTextColor:"];
}


@end

@implementation UILabel (Inspectable)

- (UIColor *)normalTextColor {
    return objc_getAssociatedObject(self, @selector(normalTextColor));
}

- (void)setNormalTextColor:(UIColor *)normalTextColor {
    objc_setAssociatedObject(self, @selector(normalTextColor), normalTextColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}

- (UIColor *)normalShadowColor {
    return objc_getAssociatedObject(self, @selector(normalShadowColor));
}

- (void)setNormalShadowColor:(UIColor *)normalShadowColor {
    objc_setAssociatedObject(self, @selector(normalShadowColor), normalShadowColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}

- (UIColor *)normalHighlightedTextColor {
    return objc_getAssociatedObject(self, @selector(normalHighlightedTextColor));
}

- (void)setNormalHighlightedTextColor:(UIColor *)normalHighlightedTextColor {
    objc_setAssociatedObject(self, @selector(normalHighlightedTextColor), normalHighlightedTextColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}


- (UIColor *)nightTextColor {
    return objc_getAssociatedObject(self, @selector(nightTextColor));
}

- (void)setNightTextColor:(UIColor *)nightTextColor {
    objc_setAssociatedObject(self, @selector(nightTextColor), nightTextColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}

- (UIColor *)nightShadowColor {
    return objc_getAssociatedObject(self, @selector(nightShadowColor));
}

- (void)setNightShadowColor:(UIColor *)nightShadowColor {
    objc_setAssociatedObject(self, @selector(nightShadowColor), nightShadowColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}

- (UIColor *)nightHighlightedTextColor {
    return objc_getAssociatedObject(self, @selector(nightHighlightedTextColor));
}

- (void)setNightHighlightedTextColor:(UIColor *)nightHighlightedTextColor {
    objc_setAssociatedObject(self, @selector(nightHighlightedTextColor), nightHighlightedTextColor, OBJC_ASSOCIATION_COPY_NONATOMIC);
}

@end
